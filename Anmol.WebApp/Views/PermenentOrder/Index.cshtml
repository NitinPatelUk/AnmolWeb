@using _Anmol.Common
@using _Anmol.Web.Common
@{
    ViewBag.Title = "Permanent Order List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .dataTables_filter input {
        outline: 0;
        width: 200px;
        padding: 7px 12px;
        border: 1px solid #ddd;
        border-radius: 3px;
    }
</style>

<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-sm-8">
            <h2><b>Cow List</b></h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.Home)">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <strong>Permanent Order List</strong>
                </li>
            </ol>
        </div>
        <div class="col-sm-4">
            <div class="title-action">
                @if (AuthorizationHelper.IsAccessRightExists(Url.RequestContext.RouteData.Values["controller"].ToString(), Enums.AccessRight.Create))
                {
                    <a href="@Url.Action(ActionHelper.GetMilkOrderById, ControllerHelper.PermenentOrder)?Id=0" class="btn btn-sm btn-primary float-right m-t-n-xs"><i class="fa fa-plus"></i> Add New Order </a>
                }
            </div>
        </div>
    </div>
</div>

<div class="row pt-4">
    <div class="col-12">
        <div class="ibox">
            <div class="ibox-title">
                <h5>Search Order</h5>
                <div class="ibox-tools">
                    <a class="collapse-link">
                        <i class="fa fa-chevron-down"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content" style="display: none;">
                <div class="row">
                    <div class="col-md-3 form-group">
                        <label>Name</label>
                        @Html.TextBox("CustName", null, new { @class = "form-control" })
                    </div>
                    <div class="col-md-3 form-group">
                        <label>Delivery Time</label>

                        @Html.DropDownList("DeliveryTime", new List<SelectListItem> {
                            new SelectListItem { Text = "Morning", Value = "Morning" },
                            new SelectListItem { Text = "Evening", Value = "Evening" }, },
        new { @class = "form-control", id = "DeliveryTime" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button class="btn btn-primary" onclick="BindCowGrid()">Search</button>
                        <button class="btn btn-secondary" onclick="ClearSearchData()">Clear</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="ibox">
            <div class="ibox-content">
                <div class="table-responsive">
                    <table id="tblOrder" class="table table-bordered display w-100 mb-4">
                        <thead>
                            <tr>
                                <th>Order Id</th>
                                <th>Customer Name</th>
                                <th>Delivery Time</th>
                                <th>Quantity</th>
                                <th class="text-center" width="80">Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        BindCowGrid();
    });
    function BindCowGrid() {
        //debugger;
        $.ajax({
            url: encodeURI('@Url.Action(ActionHelper.GetOrderList, ControllerHelper.PermenentOrder)'),
            type: "GET",
            data: {
                name: $('#CustName').val(),
                DeliveryTime: $('#DeliveryTime').val(),
            },
            dataType: "json",
            success: GetData
        });
    }

    function GetData(data) {
        try {
            var dt = $('#tblOrder').DataTable();
                 if (dt != 'undefined') {
                    dt.destroy();
                    }
            dt = $('#tblOrder').DataTable({
                "lengthMenu": [50, 100, 200, 500],
                "pageLength": 50,
                "order": [0, 'desc'],
                "dom": 'frtlip',
                "bFilter": true,
                "autoWidth": true,
                "aaData": data.Data,
                "aoColumns": [
                    {
                        "mData": "Id"
                    },
                    {
                        "mData": "CustName"
                    },
                    {
                        "mData": "DeliveryTime"
                    },
                    {
                        "mData": "Quantity"
                    },
                    {
                        "mData": "Id",
                        "className": "dt-center",
                        "orderable": false,
                        "render": function (data, type, row, meta) {
                            var ActionButtonEdit = '<a href="@Url.Action(ActionHelper.GetMilkOrderById, ControllerHelper.PermenentOrder)?Id=' + row.Id+'" title="Edit Cow"   class="btn-link btn-sm px-1"><i class="fa fa-pencil text-primary"></i></a>';
                            var ActionButtonDelete = '<a href="javascript:void(0)" title="Delete Cow" onclick="deleteCowClick(\'' + row.Id + '\')" class="btn-link btn-sm px-1"><i class="fa fa-trash text-primary"></i></a>';
                            var result = '';
                            if ('@AuthorizationHelper.IsActionAccessRightExists(Url.RequestContext.RouteData.Values["controller"].ToString(),"Index", Enums.AccessRight.Edit)' == 'True') {
                                result = result + ActionButtonEdit;
                            }
                            if ('@AuthorizationHelper.IsActionAccessRightExists(Url.RequestContext.RouteData.Values["controller"].ToString(), "Index", Enums.AccessRight.Delete)' == 'True') {
                                result = result + ActionButtonDelete;
                            }
                            return result;
                        }
                    }
                ]
            });
            $(".dataTables_length").css('clear', 'none');
            $(".dataTables_length").css('margin-right', '20px');
            $(".dataTables_info").css('clear', 'none');
            $(".dataTables_info").css('padding', '0');
        } catch (e) {
            alert(e.message);
        }
    }

    function deleteCowClick(Id) {
        debugger;
        bootbox.confirm("Are you sure you want to delete this record?", function (result) {
            if (result) {
                $.ajax({
                    url: '@Url.Action(ActionHelper.DeleteMilkOrder, ControllerHelper.PermenentOrder)',
                    async: false,
                    type: 'POST',
                    data: {
                        Id: Id,
                    },
                    success: function (data) {
                        if (data.Flag) {
                            BindCowGrid();
                            toastr.success("Cow deleted successfully.");
                        }
                        else {
                            toastr.error("Something Went Wrong.");
                        }
                    }
                });
            }
        });
    }

    function ClearSearchData() {
        $("#CustName").val("");
        $("#Id").val("");
        $("#DeliveryTime").val("");
        BindCowGrid();
    }
</script>

