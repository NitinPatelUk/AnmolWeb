@using _Anmol.Common
@model _Anmol.Entity.CustomerModel
@{
    ViewBag.Title = "AddEditCustomer";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>Customer List</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.Home)">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.Customer)">Customer List</a>
                </li>
                <li class="breadcrumb-item active">
                    @if (Model.CustID > 0)
                    {
                        <strong>Edit Customer</strong>
                    }
                    else
                    {
                        <strong>Add New Customer</strong>
                    }
                </li>
            </ol>
        </div>
    </div>
</div>
@using (Html.BeginForm(ActionHelper.SaveCustomer, ControllerHelper.Customer, FormMethod.Post, new { @id = "formAddEditCustomer", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.CustID);
    <div class="row">
        <div class="col-md-12 pt-2">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Customer Details</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-3 form-group">
                            <label>Customer Name *</label>
                            @Html.TextBoxFor(x => x.CustName, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.CustName, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Address *</label>
                            @Html.TextAreaFor(x => x.CustAddress, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.CustAddress, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Contact *</label>
                            @Html.TextBoxFor(x => x.ContactNumber, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.ContactNumber, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Zipcode</label>
                            @Html.TextBoxFor(x => x.ZipCode, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.ZipCode, "", new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group">
                            <label>Secondary Name</label>
                            @Html.TextBoxFor(x => x.SecondaryContact, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.SecondaryContact, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Secondary Contact</label>
                            @Html.TextBoxFor(x => x.SecondarContactNumber, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.SecondarContactNumber, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Password *</label>
                            @Html.TextBoxFor(x => x.Password, new { @class = "form-control ", @required = "required" , @minlength = 8 })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger help-block" })                            
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 text-right pb-5">
            <button class="btn btn-primary" type="submit" id="btnCustSave" onclick="return checkvalidation();">Save</button>
            <button class="btn btn-secondary" type="button" onclick="CancelClick()">Cancel</button>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#side-menu li.active').removeClass('active');
        $("#Custmenu").addClass("active");
    });

    function checkvalidation() {
        var form = $("#formAddEditCustomer")
        if (form.valid()) {
            return true;
        }
        else {
            return false;
        }
    }
    function CancelClick() {
        window.location.href ="@Url.Action(ActionHelper.Index, ControllerHelper.Customer)";
    }
</script>