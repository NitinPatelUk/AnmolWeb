@using _Anmol.Common;
@{
    ViewBag.Title = "Customer Temporary Order List";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .dataTables_filter input {
        outline: 0;
        width: 200px;
        padding: 7px 12px;
        border: 1px solid #ddd;
        border-radius: 3px;
    }
</style>
<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-sm-8">
            <h2><b>Customer Temporary Order List</b></h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.CustomerTemporaryOrder)">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <strong>Customer Temporary Order List</strong>
                </li>
            </ol>
        </div>
        <div class="col-sm-4">
            <div class="title-action">
                <a href="@Url.Action(ActionHelper.GetCustomerTemporaryOrderById, ControllerHelper.CustomerTemporaryOrder)?CustTempOrdId=0" class="btn btn-sm btn-primary float-right m-t-n-xs"><i class="fa fa-plus"></i> Add New Customer Temporary Order </a>
            </div>
        </div>
    </div>
</div>

<div class="row pt-4">
    <div class="col-12 ">
        <div class="ibox">
            <div class="ibox-title collapse-link">
                <h5>Search Customer Temporary Order</h5>
                <div class="ibox-tools">
                    <a class="">
                        <i class="fa fa-chevron-down"></i>
                    </a>
                </div>
            </div>
            <div class="ibox-content" style="display: none;">
                <div class="row">
                    <div class="col-md-3 form-group">
                        <label>Customer Name</label>
                        @Html.DropDownList("CustName", new SelectList((IEnumerable<SelectListItem>)ViewBag.CustomerList, "Value", "Text"), "--- Select Customer ---", new { @class = "form-control" })
                    </div>
                    <div class="col-md-3 form-group">
                        <label>Delivery Time</label>
                        @Html.DropDownList("DeliveryTime", new List<SelectListItem> {
                                            new SelectListItem { Text = "Morning", Value = "Morning" },
                                            new SelectListItem { Text = "Evening", Value = "Evening" }, }, "--- Select Delivery Time ---",
                        new { @class = "form-control" })
                    </div>
                    <div class="col-md-3 form-group">
                        <label>Start Date</label>
                        @Html.TextBox("StartDate", null, new { @class = "form-control", @type = "date" })
                    </div>
                    <div class="col-md-3 form-group">
                        <label>End Date</label>
                        @Html.TextBox("EndDate", null, new { @class = "form-control", @type = "date" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12 text-right">
                        <button class="btn btn-primary" onclick="BindCustomerTemporaryOrderGrid()">Search</button>
                        <button class="btn btn-secondary" onclick="ClearSearchData()">Clear</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-12">
        <div class="ibox">
            <div class="ibox-content">
                <div class="table-responsive">
                    <table id="tblCustomerTemporaryOrder" class="table table-bordered display w-100 mb-4">
                        <thead>
                            <tr>
                                <th>CustTempOrdId</th>
                                <th>Customer Name</th>
                                <th>Start Date</th>
                                <th>End Date</th>
                                <th>Delivery Time</th>
                                <th>Quantity</th>
                                <th class="text-center" width="80">Actions</th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        BindCustomerTemporaryOrderGrid();
    });
    function BindCustomerTemporaryOrderGrid() {
        //debugger;
        $.ajax({
            url: encodeURI('@Url.Action(ActionHelper.GetCustomerTemporaryOrderList, ControllerHelper.CustomerTemporaryOrder)'),
            type: "GET",
            data: {
                CustName: $('#CustName').val(),
                DeliveryTime: $('#DeliveryTime').val(),
                StartDate: $('#StartDate').val(),
                EndDate: $('#EndDate').val()
            },
            dataType: "json",
            success: GetData
        });
    }

    function GetData(data) {
        try {

            var dt = $('#tblCustomerTemporaryOrder').DataTable();
                 if (dt != 'undefined') {
                    dt.destroy();
                    }
            dt = $('#tblCustomerTemporaryOrder').DataTable({
                "lengthMenu": [50, 100, 200, 500],
                "pageLength": 50,
                "order": [0, 'desc'],
                "dom": 'frtlip',
                "bFilter": true,
                "autoWidth": true,
                "aaData": data.Data,
                "aoColumns": [
                    {
                        "mData": "CustTempOrdId"
                    },
                    {
                        "mData": "CustName"
                    },
                    {
                        "mData": "StartDate",
                        "render": function (data) {
                            if (data === null) return "";
                            var date = new Date(parseInt(data.substr(6)));
                            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                            return ("0" + date.getDate()).slice(-2) + '/' + month + '/' + date.getFullYear();
                        }
                    },
                    {
                        "mData": "EndDate",
                        "render": function (data) {
                            if (data === null) return "";
                            var date = new Date(parseInt(data.substr(6)));
                            var month = ("0" + (date.getMonth() + 1)).slice(-2);
                            return ("0" + date.getDate()).slice(-2) + '/' + month + '/' + date.getFullYear();
                        }
                    },
                    {
                        "mData": "DeliveryTime"
                    },
                    {
                        "mData": "Quantity"
                    },
                    {
                        "mData": "CustTempOrdId",
                        "className": "dt-center",
                        "orderable": false,
                        "render": function (data, type, row, meta) {
                            var ActionButtonEdit = '<a href="@Url.Action(ActionHelper.GetCustomerTemporaryOrderById, ControllerHelper.CustomerTemporaryOrder)?CustTempOrdId=' + row.CustTempOrdId+'" title="Edit Customer Temporary Order"   class="btn-link btn-sm px-1"><i class="fa fa-pencil text-primary"></i></a>';
                            var ActionButtonDelete = '<a href="javascript:void(0)" title="Delete Customer Temporary Order" onclick="deleteCustomerTemporaryOrderClick(\'' + row.CustTempOrdId + '\')" class="btn-link btn-sm px-1"><i class="fa fa-trash text-primary"></i></a>';
                            var result =  ActionButtonEdit;
                            result = result + ActionButtonDelete;
                            return result;
                        }
                    }
                ]
            });
            $(".dataTables_length").css('clear', 'none');
            $(".dataTables_length").css('margin-right', '20px');
            $(".dataTables_info").css('clear', 'none');
            $(".dataTables_info").css('padding', '0');
        } catch (e) {
            alert(e.message);
        }
    }

    function deleteCustomerTemporaryOrderClick(CustTempOrdId) {
       // debugger;
        bootbox.confirm("Are you sure you want to delete this record?", function (result) {
            if (result) {
                $.ajax({
                    url: '@Url.Action(ActionHelper.DeleteCustomerTemporaryOrder, ControllerHelper.CustomerTemporaryOrder)',
                    async: false,
                    type: 'POST',
                    data: {
                        CustTempOrdId: CustTempOrdId,
                    },
                    success: function (data) {
                        if (data.Flag) {
                            BindCustomerTemporaryOrderGrid();
                            toastr.success("Customer Temporary Order deleted successfully.");
                        }
                        else {
                            toastr.error("Something Went Wrong.");
                        }
                    }
                });
            }
        });
    }

    function ClearSearchData() {
        $("#CustName").val("");
        $("#DeliveryTime").val("");
        $("#StartDate").val("");
        $('#EndDate').val("");
        BindCustomerTemporaryOrderGrid();
    }
</script>

