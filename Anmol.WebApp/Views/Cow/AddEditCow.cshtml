@using _Anmol.Common
@model _Anmol.Entity.CowModel
@{
    ViewBag.Title = "AddEditCow";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-sm-12">
            <h2>Cow List</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.Home)">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.Cow)">Cow List</a>
                </li>
                <li class="breadcrumb-item active">
                    @if (Model.CowID > 0)
                    {
                        <strong>Edit Cow</strong>
                    }
                    else
                    {
                        <strong>Add New Cow</strong>
                    }
                </li>
            </ol>
        </div>
    </div>
</div>
@using (Html.BeginForm(ActionHelper.SaveCow, ControllerHelper.Cow, FormMethod.Post, new { @id = "formAddEditCow", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.CowID, "CowID");
    <div class="row">
        <div class="col-md-12 pt-2">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Cow Details</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-3 form-group">
                            <label>Cow Name *</label>
                            @Html.TextBoxFor(x => x.CowName, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.CowName, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Gender</label><br>
                            Bull :   @Html.RadioButton("gender", "Bull")
                            Cow : @Html.RadioButton("gender", "Cow")
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Father</label>
                            @Html.DropDownListFor(x => x.FatherName, new SelectList((IEnumerable<SelectListItem>)ViewBag.BullList, "Value", "Text"), "--- Select Father ---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FatherName, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Mother</label>
                            @Html.DropDownListFor(x => x.MotherName, new SelectList((IEnumerable<SelectListItem>)ViewBag.CowList, "Value", "Text"), "--- Select Mother ---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MotherName, null, new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group">
                            <label>Purchase Amount</label>
                            @Html.TextBoxFor(x => x.PurchaseAmt, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.PurchaseAmt, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Sales Amount</label>
                            @Html.TextBoxFor(x => x.SalesAmt, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.SalesAmt, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>DoB</label>
                            @Html.TextBoxFor(x => x.DoB, "{0:yyyy-MM-dd}", new { @class = "form-control", @required = "required", @type = "date" })
                            @Html.ValidationMessageFor(m => m.DoB, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Date of Death</label>
                            @Html.TextBoxFor(x => x.DoD, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group" id="incexcvat">
                            <label> </label>
                            <div class="custom-control custom-switch switch-success">
                                @Html.CheckBoxFor(x => x.IsMilkable, new { @class = "custom-control-input" })
                                <label class="custom-control-label" id="lblIsMilkable" for="IsMilkable">Is Milkable</label>
                            </div>
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Place Of Origin</label>
                            @Html.TextBoxFor(x => x.PlaceOfOrigin, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.PlaceOfOrigin, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Notes</label>
                            @Html.TextAreaFor(x => x.Notes, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Image</label>
                            <div class="custom-file mb-2">
                                <input type="file" class="custom-file-input" id="UploadImage">
                                <label class="custom-file-label" for="UploadImage">Choose file</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 text-right pb-5">
            <button class="btn btn-primary" type="submit" id="btnCowSave" onclick="return checkvalidation();">Save</button>
            <button class="btn btn-secondary" type="button" onclick="CancelClick()">Cancel</button>
        </div>
    </div>
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#side-menu li.active').removeClass('active');
        $("#Cowmenu").addClass("active");

        //var chkIsWithVAT = $("#IsMilkable");
        //if (chkIsWithVAT.is(":checked")) {
        //    $("#lblIsMilkable").html("INC. VAT")
        //}
    });

    function checkvalidation() {
        var form = $("#formAddEditCow")
        if (form.valid()) {
            return true;
        }
        else {
            return false;
        }
    }
    function CancelClick() {
        window.location.href ="@Url.Action(ActionHelper.Index, ControllerHelper.Cow)";
    }

    $('#UploadImage').on('change', function (e) {
        debugger;
        var files = e.target.files;
        if (files.length > 0) {
            var extension = files[0].name.substring(files[0].name.lastIndexOf(".") + 1);
            var allowedext = ["jpg", "png","jpeg","JPEG","PNG","JPG"];
            if (allowedext.indexOf(extension) == -1) {
                toastr.error("Please select Image file.")
                return false;
            }
            else
                //var myID = 3; //uncomment this to make sure the ajax URL works
                if (files.length > 0) {
                    if (window.FormData !== undefined) {
                        var data = new FormData();
                        for (var i = 0; i < files.length; i++) {
                            data.append(files[i].name, files[i]);
                        }
                        var CowId = $('#CowID').val();
                        $.ajax({
                            type: "POST",
                            url: '/CowImage/UploadImage?CowId=' + CowId,
                            contentType: false,
                            processData: false,
                            data: data,
                            success: function (data) {
                                if (data.SurveyDocId > 0) {
                                    $("#SurveyDocument").hide();
                                    $(".saved-document").append("<li id='Document_" + data.SurveyDocId + "'><span>" + data.DocName + "</span><a href='javascript:;' onclick='DeleteSurveyDocument(" + data.SurveyDocId + ")' class='btn btn-primary' ><i class='bx bx-x'></i></a></li>");


                                    "javascript:;"
                            },
                            error: function (xhr, status, p3, p4) {
                                var err = "Error " + " " + status + " " + p3 + " " + p4;
                                if (xhr.responseText && xhr.responseText[0] == "{")
                                    err = JSON.parse(xhr.responseText).Message;
                                console.log(err);
                            }
                        });
                    }
                    else {
                        toastr.error("This browser doesn't support HTML5 file uploads!");
                    }
                }
        }
     });
</script>