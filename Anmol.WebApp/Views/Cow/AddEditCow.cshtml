@using _Anmol.Common
@model _Anmol.Entity.CowModel
@{
    ViewBag.Title = "AddEditCow";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-sm-10">
            <h2>Cow List</h2>
            <ol class="breadcrumb">
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.Home)">Home</a>
                </li>
                <li class="breadcrumb-item">
                    <a href="@Url.Action(ActionHelper.Index, ControllerHelper.Cow)">Cow List</a>
                </li>
                <li class="breadcrumb-item active">
                    @if (Model.CowID > 0)
                    {
                        <strong>Edit Cow</strong>
                    }
                    else
                    {
                        <strong>Add New Cow</strong>
                    }
                </li>
            </ol>
        </div>
        <div class="col-sm-2 text-center">
            <img class="img-circle" src="~/Document/CowImage/@Model.ImageName" width='100' height='100' style="margin-top:15px;" onclick="Popup_Image('@Model.ImageName')">
        </div>
    </div>
</div>
@using (Html.BeginForm(ActionHelper.SaveCow, ControllerHelper.Cow, FormMethod.Post, new { @id = "formAddEditCow", @class = "form-horizontal", enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.CowID, "CowID");
    @Html.HiddenFor(model => model.ImageName, "ImageName");
    @Html.HiddenFor(model => model.ImagePath);
    <div class="row">
        <div class="col-md-12 pt-2">
            <div class="ibox">
                <div class="ibox-title">
                    <h5>Cow Details</h5>
                </div>
                <div class="ibox-content">
                    <div class="row">
                        <div class="col-md-3 form-group">
                            <label>Cow Name *</label>
                            @Html.TextBoxFor(x => x.CowName, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.CowName, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Gender</label><br>
                            Bull :   @Html.RadioButton("gender", "Bull")
                            Cow : @Html.RadioButton("gender", "Cow")
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Father</label>
                            @Html.DropDownListFor(x => x.FatherName, new SelectList((IEnumerable<SelectListItem>)ViewBag.BullList, "Value", "Text"), "--- Select Father ---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FatherName, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Mother</label>
                            @Html.DropDownListFor(x => x.MotherName, new SelectList((IEnumerable<SelectListItem>)ViewBag.CowList, "Value", "Text"), "--- Select Mother ---", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.MotherName, null, new { @class = "text-danger help-block" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group">
                            <label>Purchase Amount</label>
                            @Html.TextBoxFor(x => x.PurchaseAmt, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.PurchaseAmt, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Sales Amount</label>
                            @Html.TextBoxFor(x => x.SalesAmt, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.SalesAmt, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>DoB</label>
                            @Html.TextBoxFor(x => x.DoB, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                            @Html.ValidationMessageFor(m => m.DoB, null, new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Date of Death</label>
                            @Html.TextBoxFor(x => x.DoD, "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-3 form-group" id="incexcvat">
                            <label> </label>
                            <div class="custom-control custom-switch switch-success">
                                @Html.CheckBoxFor(x => x.IsMilkable, new { @class = "custom-control-input" })
                                <label class="custom-control-label" id="lblIsMilkable" for="IsMilkable">Is Milkable</label>
                            </div>
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Place Of Origin</label>
                            @Html.TextBoxFor(x => x.PlaceOfOrigin, new { @class = "form-control ", @required = "required" })
                            @Html.ValidationMessageFor(m => m.PlaceOfOrigin, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Notes</label>
                            @Html.TextAreaFor(x => x.Notes, new { @class = "form-control " })
                            @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger help-block" })
                        </div>
                        <div class="col-md-3 form-group">
                            <label>Image</label>
                            <div class="custom-file mb-2">
                                <input type="file" class="custom-file-input" id="UploadImage" name="UploadImage" value="UploadImage" multiple="multiple" accept="image/*"><br>
                                <label class="custom-file-label" for="UploadImage">@Model.ImageName</label>
                                
                            </div>
                        </div>
                    </div>
                    <div class="row">

                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 text-right pb-5">
            <button class="btn btn-primary" type="submit" id="btnCowSave" onclick="return checkvalidation();">Save</button>
            <button class="btn btn-secondary" type="button" onclick="CancelClick()">Cancel</button>
        </div>
    </div>
}
@*For Image Popup modal*@
<div class="modal fade">
    <div class="modal-dialog modal-dialog-centered modal-lg modal-dialog-scrollable">
        <div class="modal-content" style="background-color: transparent;">
            <div class="modal-header border-0">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" class="text-dark">X</span>
                </button>
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    //For Image popup
    var image_path = "";

    $(document).ready(function () {
        $('#side-menu li.active').removeClass('active');
        $("#Cowmenu").addClass("active");
    });

    function checkvalidation() {
        var form = $("#formAddEditCow")
        if (form.valid()) {
            return true;
        }
        else {
            return false;
        }
    }
    function CancelClick() {

        window.location.href ="@Url.Action(ActionHelper.Index, ControllerHelper.Cow)";
    }
    $('#UploadImage').on('change', function ()
    {
        files = $(this)[0].files; name = ''; sr = '';
        name = files[0].name;
        var reader = new FileReader();
    
        reader.onload = function (e) {
            $('.img-circle').attr('src', e.target.result);
            image_path = e.target.result;
        }
        reader.readAsDataURL(files[0]);
        $(".custom-file-label").html(name);
        $("ImageName").html(name);
    });

    function Popup_Image(image_name) {
        var html = "";

        if (image_name != "") {
            html = '<img src="/Document/CowImage/' + image_name + '" style="height:100%;width:100%;" />';
        }

        if (image_path != "") {
            html = '<img src="' + image_path + '" style="height:100%;width:100%;" />';
        }

        if (image_name != "" || image_path != "") {
            $('.modal .modal-body').html(html);
            $('.modal').modal('show');
        }
        else {
            toastr.error("No image Available!");
        }
    }
</script>